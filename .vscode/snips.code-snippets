{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"tsx component template": {
		"prefix": ["newcomp"],
		"body": [
			"import React from 'react';",
			"import styled from 'styled-components'",
			"",
			"const ${1:ComponentName} = () => {",
			"return (",
			"<Div>",
			"${2:<div>Hello World</div>}",
			"</Div>",
			");",
			"};",
			"",
			"export default ${1:ComponentName};",
			"",
			"const Div = styled.div``"
		],
	},
	"tsx stories file template": {
		"prefix": ["newstories, tstory"],
		"body": [
			"import React from 'react';",
			"import { ComponentMeta, ComponentStory } from '@storybook/react';",
			"",
			"import ${1:ComponentName} from '${3:ComponentPath}'",
			"",
			"export default {",
			"\ttitle: '${2:ComponentTitle}',",
			"\tcomponent: ${1:ComponentName}",
			"} as ComponentMeta<typeof ${1:ComponentName}>;",
			"",
			"const Template: ComponentStory<typeof ${1:ComponentName}> = (args) => <${1:ComponentName} {...args} />",
			"",
			"export const Primary = Template.bind({});"
		]
	}
}